// <auto-generated />
using System;
using LMS.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Persistence.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    [Migration("20250926085118_Initilize")]
    partial class Initilize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.Level", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.HasKey("Id");

                    b.ToTable("Level", "Education");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.Register", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfInstallment")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TermCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("TuitionPayType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TermCourseId");

                    b.ToTable("Register", "Education");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.TermCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TermCourseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TermCourseTypeId");

                    b.ToTable("TermCourse", "Education");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.TermCourseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("ClassType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("TermCourseType", "Education");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Finance.PaymentTuition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaied")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RegisterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RegisterId");

                    b.ToTable("PaymentTuition", "Finance");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("BrithDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Person", "Identity");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumber", "Identity");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Employee", b =>
                {
                    b.HasBaseType("LMS.ApplicationCore.Entities.Identity.Person");

                    b.ToTable("Employee", "Identity");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Student", b =>
                {
                    b.HasBaseType("LMS.ApplicationCore.Entities.Identity.Person");

                    b.ToTable("Student", "Identity");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Teacher", b =>
                {
                    b.HasBaseType("LMS.ApplicationCore.Entities.Identity.Person");

                    b.ToTable("Teacher", "Identity");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.Register", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Identity.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.ApplicationCore.Entities.Education.TermCourse", "TermCourse")
                        .WithMany("Registers")
                        .HasForeignKey("TermCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("TermCourse");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.TermCourse", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Identity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.ApplicationCore.Entities.Education.TermCourseType", "TermCourseType")
                        .WithMany("TermCourses")
                        .HasForeignKey("TermCourseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TermCourseType");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.TermCourseType", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Education.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Finance.PaymentTuition", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Education.Register", "Register")
                        .WithMany()
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.PhoneNumber", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Identity.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Employee", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Identity.Person", null)
                        .WithOne()
                        .HasForeignKey("LMS.ApplicationCore.Entities.Identity.Employee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Student", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Identity.Person", null)
                        .WithOne()
                        .HasForeignKey("LMS.ApplicationCore.Entities.Identity.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Teacher", b =>
                {
                    b.HasOne("LMS.ApplicationCore.Entities.Identity.Person", null)
                        .WithOne()
                        .HasForeignKey("LMS.ApplicationCore.Entities.Identity.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.TermCourse", b =>
                {
                    b.Navigation("Registers");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Education.TermCourseType", b =>
                {
                    b.Navigation("TermCourses");
                });

            modelBuilder.Entity("LMS.ApplicationCore.Entities.Identity.Person", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
